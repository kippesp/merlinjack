class GuiPip {
  function int get_x_size() { return 48; }
  function int get_y_size() { return 46; }

  function void draw(int dblcol, int row) {
    var int base_address;
    let base_address = 16384 + (32 * row) + dblcol;

    do Memory.poke(base_address + 1 + 0, 4092);
    do Memory.poke(base_address + 1 + 32, 32767);
    do Memory.poke(base_address + 0 + 32, 32767 + 1);
    do Memory.poke(base_address + 2 + 64, 1);
    do Memory.poke(base_address + 1 + 64, -1);
    do Memory.poke(base_address + 0 + 64, -8192);
    do Memory.poke(base_address + 2 + 96, 7);
    do Memory.poke(base_address + 1 + 96, -1);
    do Memory.poke(base_address + 0 + 96, -2048);
    do Memory.poke(base_address + 2 + 128, 31);
    do Memory.poke(base_address + 1 + 128, -1);
    do Memory.poke(base_address + 0 + 128, -512);
    do Memory.poke(base_address + 2 + 160, 63);
    do Memory.poke(base_address + 1 + 160, -1);
    do Memory.poke(base_address + 0 + 160, -256);
    do Memory.poke(base_address + 2 + 192, 127);
    do Memory.poke(base_address + 1 + 192, -1);
    do Memory.poke(base_address + 0 + 192, -128);
    do Memory.poke(base_address + 2 + 224, 255);
    do Memory.poke(base_address + 1 + 224, -1);
    do Memory.poke(base_address + 0 + 224, -64);
    do Memory.poke(base_address + 2 + 256, 511);
    do Memory.poke(base_address + 1 + 256, -1);
    do Memory.poke(base_address + 0 + 256, -32);
    do Memory.poke(base_address + 2 + 288, 1023);
    do Memory.poke(base_address + 1 + 288, -1);
    do Memory.poke(base_address + 0 + 288, -16);
    do Memory.poke(base_address + 2 + 320, 1023);
    do Memory.poke(base_address + 1 + 320, -1);
    do Memory.poke(base_address + 0 + 320, -16);
    do Memory.poke(base_address + 2 + 352, 2047);
    do Memory.poke(base_address + 1 + 352, -1);
    do Memory.poke(base_address + 0 + 352, -8);
    do Memory.poke(base_address + 2 + 384, 2047);
    do Memory.poke(base_address + 1 + 384, -1);
    do Memory.poke(base_address + 0 + 384, -8);
    do Memory.poke(base_address + 2 + 416, 4095);
    do Memory.poke(base_address + 1 + 416, -1);
    do Memory.poke(base_address + 0 + 416, -4);
    do Memory.poke(base_address + 2 + 448, 4095);
    do Memory.poke(base_address + 1 + 448, -1);
    do Memory.poke(base_address + 0 + 448, -4);
    do Memory.poke(base_address + 2 + 480, 8191);
    do Memory.poke(base_address + 1 + 480, -1);
    do Memory.poke(base_address + 0 + 480, -2);
    do Memory.poke(base_address + 2 + 512, 8191);
    do Memory.poke(base_address + 1 + 512, -1);
    do Memory.poke(base_address + 0 + 512, -2);
    do Memory.poke(base_address + 2 + 544, 8191);
    do Memory.poke(base_address + 1 + 544, -1);
    do Memory.poke(base_address + 0 + 544, -2);
    do Memory.poke(base_address + 2 + 576, 16383);
    do Memory.poke(base_address + 1 + 576, -1);
    do Memory.poke(base_address + 0 + 576, -1);
    do Memory.poke(base_address + 2 + 608, 16383);
    do Memory.poke(base_address + 1 + 608, -1);
    do Memory.poke(base_address + 0 + 608, -1);
    do Memory.poke(base_address + 2 + 640, 16383);
    do Memory.poke(base_address + 1 + 640, -1);
    do Memory.poke(base_address + 0 + 640, -1);
    do Memory.poke(base_address + 2 + 672, 16383);
    do Memory.poke(base_address + 1 + 672, -1);
    do Memory.poke(base_address + 0 + 672, -1);
    do Memory.poke(base_address + 2 + 704, 16383);
    do Memory.poke(base_address + 1 + 704, -1);
    do Memory.poke(base_address + 0 + 704, -1);
    do Memory.poke(base_address + 2 + 736, 16383);
    do Memory.poke(base_address + 1 + 736, -1);
    do Memory.poke(base_address + 0 + 736, -1);
    do Memory.poke(base_address + 2 + 768, 16383);
    do Memory.poke(base_address + 1 + 768, -1);
    do Memory.poke(base_address + 0 + 768, -1);
    do Memory.poke(base_address + 2 + 800, 16383);
    do Memory.poke(base_address + 1 + 800, -1);
    do Memory.poke(base_address + 0 + 800, -1);
    do Memory.poke(base_address + 2 + 832, 16383);
    do Memory.poke(base_address + 1 + 832, -1);
    do Memory.poke(base_address + 0 + 832, -1);
    do Memory.poke(base_address + 2 + 864, 16383);
    do Memory.poke(base_address + 1 + 864, -1);
    do Memory.poke(base_address + 0 + 864, -1);
    do Memory.poke(base_address + 2 + 896, 8191);
    do Memory.poke(base_address + 1 + 896, -1);
    do Memory.poke(base_address + 0 + 896, -2);
    do Memory.poke(base_address + 2 + 928, 8191);
    do Memory.poke(base_address + 1 + 928, -1);
    do Memory.poke(base_address + 0 + 928, -2);
    do Memory.poke(base_address + 2 + 960, 8191);
    do Memory.poke(base_address + 1 + 960, -1);
    do Memory.poke(base_address + 0 + 960, -2);
    do Memory.poke(base_address + 2 + 992, 4095);
    do Memory.poke(base_address + 1 + 992, -1);
    do Memory.poke(base_address + 0 + 992, -4);
    do Memory.poke(base_address + 2 + 1024, 4095);
    do Memory.poke(base_address + 1 + 1024, -1);
    do Memory.poke(base_address + 0 + 1024, -4);
    do Memory.poke(base_address + 2 + 1056, 2047);
    do Memory.poke(base_address + 1 + 1056, -1);
    do Memory.poke(base_address + 0 + 1056, -8);
    do Memory.poke(base_address + 2 + 1088, 2047);
    do Memory.poke(base_address + 1 + 1088, -1);
    do Memory.poke(base_address + 0 + 1088, -8);
    do Memory.poke(base_address + 2 + 1120, 1023);
    do Memory.poke(base_address + 1 + 1120, -1);
    do Memory.poke(base_address + 0 + 1120, -16);
    do Memory.poke(base_address + 2 + 1152, 1023);
    do Memory.poke(base_address + 1 + 1152, -1);
    do Memory.poke(base_address + 0 + 1152, -16);
    do Memory.poke(base_address + 2 + 1184, 511);
    do Memory.poke(base_address + 1 + 1184, -1);
    do Memory.poke(base_address + 0 + 1184, -32);
    do Memory.poke(base_address + 2 + 1216, 255);
    do Memory.poke(base_address + 1 + 1216, -1);
    do Memory.poke(base_address + 0 + 1216, -64);
    do Memory.poke(base_address + 2 + 1248, 127);
    do Memory.poke(base_address + 1 + 1248, -1);
    do Memory.poke(base_address + 0 + 1248, -128);
    do Memory.poke(base_address + 2 + 1280, 63);
    do Memory.poke(base_address + 1 + 1280, -1);
    do Memory.poke(base_address + 0 + 1280, -256);
    do Memory.poke(base_address + 2 + 1312, 31);
    do Memory.poke(base_address + 1 + 1312, -1);
    do Memory.poke(base_address + 0 + 1312, -512);
    do Memory.poke(base_address + 2 + 1344, 7);
    do Memory.poke(base_address + 1 + 1344, -1);
    do Memory.poke(base_address + 0 + 1344, -2048);
    do Memory.poke(base_address + 2 + 1376, 1);
    do Memory.poke(base_address + 1 + 1376, -1);
    do Memory.poke(base_address + 0 + 1376, -8192);
    do Memory.poke(base_address + 1 + 1408, 32767);
    do Memory.poke(base_address + 0 + 1408, 32767 + 1);
    do Memory.poke(base_address + 1 + 1440, 4092);

    return;
  }

  function void blank(int dblcol, int row) {
    var int x1;
    var int y1;
    var int x2;
    var int y2;
    let x1 = dblcol * 16;
    let y1 = row;
    let x2 = x1 + 47;
    let y2 = y1 + 46;

    do Screen.setColor(false);
    do Screen.drawRectangle(x1, y1, x2, y2);

    return;
  }
}
